name: Create Initial Cocogitto Release
on:
  - workflow_dispatch
jobs:
  release:
    if: ${{ github.event.repository.name != 'terraform-template' }} || ${{ github.event.label.name == 'template_sync' }} # Do not run IF it is the template repo
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up cache for cocogitto binary
        uses: actions/cache@v4
        with:
            path: /usr/local/bin/cog
            key: ${{ runner.os }}-cog-${{ hashFiles('**/bin/cog') }}
            restore-keys: |
                ${{ runner.os }}-cog
                    
      - name: Set up JQ
        run: sudo apt-get install jq
        
      - name: Download and install Cocogitto
        run: |
            REPO="cocogitto/cocogitto"
            LATEST_COMMIT_SHA=$(curl -s https://api.github.com/repos/$REPO/commits | jq -r '.[0].sha')
            curl -L "https://github.com/$REPO/archive/$LATEST_COMMIT_SHA.zip" -o cocogitto.zip
            unzip cocogitto.zip
            cd "cocogitto-$LATEST_COMMIT_SHA"
            cargo build --release
            sudo mv target/release/cog /usr/local/bin/
            cd ..
            rm -rf "cocogitto-$LATEST_COMMIT_SHA" cocogitto.zip

      - name: Check for conventional commit
        id: test_id
        run: cog check --from-latest-tag

      - name: Get Next Version
        id: var
        run: |
          echo next_version=`cog bump --auto --dry-run` >> "$GITHUB_OUTPUT"
          
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Create a GitHub release
        id: release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.var.outputs.next_version }}
          name: Release ${{ steps.var.outputs.next_version }}
          body: ${{ steps.git-cliff.outputs.content }}  
          
